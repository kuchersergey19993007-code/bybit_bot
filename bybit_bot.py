import os
import requests
import pytz
from bs4 import BeautifulSoup
from datetime import datetime, timedelta
from telegram import Bot
from telegram.ext import Updater, CommandHandler
import logging

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (Render –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–æ–≥–∏)
logging.basicConfig(level=logging.INFO)

# –î–æ—Å—Ç–∞—ë–º —Ç–æ–∫–µ–Ω –∏ —á–∞—Ç –∞–π–¥–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –î—É–±–ª–∏–Ω
tz = pytz.timezone("Europe/Dublin")

bot = Bot(token=TELEGRAM_TOKEN)

def fetch_announcements():
    url = "https://announcements.bybit.com/en-US/"
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, "lxml")

        announcements = []
        for article in soup.find_all("a", class_="article-card"):
            title = article.get_text(strip=True)
            link = "https://announcements.bybit.com" + article.get("href")
            announcements.append({"title": title, "link": link})
        return announcements
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–æ–Ω—Å–æ–≤: {e}")
        return []

def check_announcements(update, context):
    announcements = fetch_announcements()
    if not announcements:
        context.bot.send_message(chat_id=CHAT_ID, text="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–æ–Ω—Å—ã")
        return
    msg = "üì¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–Ω–æ–Ω—Å—ã Bybit:\n\n"
    for ann in announcements[:5]:
        msg += f"- {ann['title']}\n{ann['link']}\n\n"
    context.bot.send_message(chat_id=CHAT_ID, text=msg)

def start(update, context):
    context.bot.send_message(chat_id=CHAT_ID, text="‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π /check –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–Ω–æ–Ω—Å–æ–≤.")

def main():
    updater = Updater(token=TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("check", check_announcements))

    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
